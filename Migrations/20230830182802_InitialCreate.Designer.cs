// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Schedls.DAL;

#nullable disable

namespace Schedls.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20230830182802_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Schedls.Models.Asignacion", b =>
                {
                    b.Property<int>("AsignacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsignacionId"));

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAsignado")
                        .HasColumnType("datetime2");

                    b.Property<int>("TurnoId")
                        .HasColumnType("int");

                    b.HasKey("AsignacionId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("TurnoId");

                    b.ToTable("Asignaciones");
                });

            modelBuilder.Entity("Schedls.Models.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpleadoId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Schedls.Models.EstadoSolicitud", b =>
                {
                    b.Property<int>("EstadoSolicitudId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoSolicitudId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoSolicitudId");

                    b.ToTable("EstadosSolicitudes");

                    b.HasData(
                        new
                        {
                            EstadoSolicitudId = 1,
                            Descripcion = "Aprobada"
                        },
                        new
                        {
                            EstadoSolicitudId = 2,
                            Descripcion = "Pendiente"
                        },
                        new
                        {
                            EstadoSolicitudId = 3,
                            Descripcion = "En Proceso"
                        },
                        new
                        {
                            EstadoSolicitudId = 4,
                            Descripcion = "Cancelada por el Empleado"
                        },
                        new
                        {
                            EstadoSolicitudId = 5,
                            Descripcion = "Rechazada"
                        },
                        new
                        {
                            EstadoSolicitudId = 6,
                            Descripcion = "Solicitud Inválida"
                        });
                });

            modelBuilder.Entity("Schedls.Models.SolicitudCambio", b =>
                {
                    b.Property<int>("SolicitudCambioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SolicitudCambioId"));

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoSolicitudId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TurnoActualId")
                        .HasColumnType("int");

                    b.Property<int>("TurnoSolicitadoId")
                        .HasColumnType("int");

                    b.HasKey("SolicitudCambioId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("EstadoSolicitudId");

                    b.HasIndex("TurnoActualId");

                    b.HasIndex("TurnoSolicitadoId");

                    b.ToTable("SolcitudesCambios");
                });

            modelBuilder.Entity("Schedls.Models.TipoTurno", b =>
                {
                    b.Property<int>("TipoTurnoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoTurnoId"));

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoTurnoId");

                    b.ToTable("TiposTurnos");

                    b.HasData(
                        new
                        {
                            TipoTurnoId = 1,
                            Abreviatura = "M",
                            Descripcion = "Mañana"
                        },
                        new
                        {
                            TipoTurnoId = 2,
                            Abreviatura = "T",
                            Descripcion = "Tarde"
                        },
                        new
                        {
                            TipoTurnoId = 3,
                            Abreviatura = "N",
                            Descripcion = "Noche"
                        });
                });

            modelBuilder.Entity("Schedls.Models.Turno", b =>
                {
                    b.Property<int>("TurnoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TurnoId"));

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoTurnoId")
                        .HasColumnType("int");

                    b.HasKey("TurnoId");

                    b.HasIndex("TipoTurnoId");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("Schedls.Models.Asignacion", b =>
                {
                    b.HasOne("Schedls.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Schedls.Models.Turno", "Turno")
                        .WithMany()
                        .HasForeignKey("TurnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("Schedls.Models.SolicitudCambio", b =>
                {
                    b.HasOne("Schedls.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Schedls.Models.EstadoSolicitud", "EstadoSolicitud")
                        .WithMany()
                        .HasForeignKey("EstadoSolicitudId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Schedls.Models.Turno", "TurnoActual")
                        .WithMany()
                        .HasForeignKey("TurnoActualId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Schedls.Models.Turno", "TurnoSolicitado")
                        .WithMany()
                        .HasForeignKey("TurnoSolicitadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("EstadoSolicitud");

                    b.Navigation("TurnoActual");

                    b.Navigation("TurnoSolicitado");
                });

            modelBuilder.Entity("Schedls.Models.Turno", b =>
                {
                    b.HasOne("Schedls.Models.TipoTurno", "TipoTurno")
                        .WithMany()
                        .HasForeignKey("TipoTurnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoTurno");
                });
#pragma warning restore 612, 618
        }
    }
}
