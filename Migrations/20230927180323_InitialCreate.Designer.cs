// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Schedls.DAL;

#nullable disable

namespace Schedls.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20230927180323_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Schedls.Models.EstadoSolicitud", b =>
                {
                    b.Property<int>("EstadoSolicitudId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoSolicitudId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoSolicitudId");

                    b.ToTable("EstadosSolicitudes");

                    b.HasData(
                        new
                        {
                            EstadoSolicitudId = 1,
                            Descripcion = "Aprobada"
                        },
                        new
                        {
                            EstadoSolicitudId = 2,
                            Descripcion = "Pendiente"
                        },
                        new
                        {
                            EstadoSolicitudId = 3,
                            Descripcion = "En Proceso"
                        },
                        new
                        {
                            EstadoSolicitudId = 4,
                            Descripcion = "Cancelada por el Empleado"
                        },
                        new
                        {
                            EstadoSolicitudId = 5,
                            Descripcion = "Rechazada"
                        },
                        new
                        {
                            EstadoSolicitudId = 6,
                            Descripcion = "Solicitud Inválida"
                        });
                });

            modelBuilder.Entity("Schedls.Models.SolicitudCambio", b =>
                {
                    b.Property<int>("SolicitudCambioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SolicitudCambioId"));

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoSolicitudId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaTurnoActual")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaTurnoSolicitado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TurnoActualId")
                        .HasColumnType("int");

                    b.Property<int>("TurnoSolicitadoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("SolicitudCambioId");

                    b.HasIndex("EstadoSolicitudId");

                    b.HasIndex("TurnoActualId");

                    b.HasIndex("TurnoSolicitadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("SolicitudesCambios");

                    b.HasData(
                        new
                        {
                            SolicitudCambioId = 1,
                            Comentario = "",
                            EstadoSolicitudId = 1,
                            FechaSolicitud = new DateTime(2023, 9, 11, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaTurnoActual = new DateTime(2023, 9, 14, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaTurnoSolicitado = new DateTime(2023, 9, 14, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Motivo = "Para hacer el curso de inglés.",
                            TurnoActualId = 1,
                            TurnoSolicitadoId = 4,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("Schedls.Models.TipoTurno", b =>
                {
                    b.Property<int>("TipoTurnoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoTurnoId"));

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoTurnoId");

                    b.ToTable("TiposTurnos");

                    b.HasData(
                        new
                        {
                            TipoTurnoId = 1,
                            Abreviatura = "M",
                            Descripcion = "Mañana"
                        },
                        new
                        {
                            TipoTurnoId = 2,
                            Abreviatura = "T",
                            Descripcion = "Tarde"
                        },
                        new
                        {
                            TipoTurnoId = 3,
                            Abreviatura = "N",
                            Descripcion = "Noche"
                        });
                });

            modelBuilder.Entity("Schedls.Models.Turno", b =>
                {
                    b.Property<int>("TurnoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TurnoId"));

                    b.Property<string>("CantHorasEnDiaDeSemana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CantHorasEnFinDeSemana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IntervaloDeDias")
                        .HasColumnType("int");

                    b.Property<int>("TipoTurnoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("TurnoId");

                    b.HasIndex("TipoTurnoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Turnos");

                    b.HasData(
                        new
                        {
                            TurnoId = 1,
                            CantHorasEnDiaDeSemana = "09:00:00",
                            CantHorasEnFinDeSemana = "08:00:00",
                            FechaInicio = new DateTime(2023, 9, 14, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IntervaloDeDias = 5,
                            TipoTurnoId = 1,
                            UsuarioId = 1
                        },
                        new
                        {
                            TurnoId = 2,
                            CantHorasEnDiaDeSemana = "08:00:00",
                            CantHorasEnFinDeSemana = "08:00:00",
                            FechaInicio = new DateTime(2023, 9, 15, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IntervaloDeDias = 5,
                            TipoTurnoId = 2,
                            UsuarioId = 1
                        },
                        new
                        {
                            TurnoId = 3,
                            CantHorasEnDiaDeSemana = "08:00:00",
                            CantHorasEnFinDeSemana = "08:00:00",
                            FechaInicio = new DateTime(2023, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IntervaloDeDias = 5,
                            TipoTurnoId = 3,
                            UsuarioId = 1
                        },
                        new
                        {
                            TurnoId = 4,
                            CantHorasEnDiaDeSemana = "08:00:00",
                            CantHorasEnFinDeSemana = "08:00:00",
                            FechaInicio = new DateTime(2023, 9, 14, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IntervaloDeDias = 5,
                            TipoTurnoId = 2,
                            UsuarioId = 5
                        },
                        new
                        {
                            TurnoId = 5,
                            CantHorasEnDiaDeSemana = "08:00:00",
                            CantHorasEnFinDeSemana = "08:00:00",
                            FechaInicio = new DateTime(2023, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IntervaloDeDias = 5,
                            TipoTurnoId = 3,
                            UsuarioId = 5
                        },
                        new
                        {
                            TurnoId = 6,
                            CantHorasEnDiaDeSemana = "09:00:00",
                            CantHorasEnFinDeSemana = "08:00:00",
                            FechaInicio = new DateTime(2023, 9, 18, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IntervaloDeDias = 5,
                            TipoTurnoId = 1,
                            UsuarioId = 5
                        },
                        new
                        {
                            TurnoId = 7,
                            CantHorasEnDiaDeSemana = "08:00:00",
                            CantHorasEnFinDeSemana = "08:00:00",
                            FechaInicio = new DateTime(2023, 9, 18, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IntervaloDeDias = 5,
                            TipoTurnoId = 2,
                            UsuarioId = 4
                        },
                        new
                        {
                            TurnoId = 8,
                            CantHorasEnDiaDeSemana = "09:00:00",
                            CantHorasEnFinDeSemana = "08:00:00",
                            FechaInicio = new DateTime(2023, 9, 17, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IntervaloDeDias = 5,
                            TipoTurnoId = 1,
                            UsuarioId = 4
                        },
                        new
                        {
                            TurnoId = 9,
                            CantHorasEnDiaDeSemana = "08:00:00",
                            CantHorasEnFinDeSemana = "08:00:00",
                            FechaInicio = new DateTime(2023, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IntervaloDeDias = 5,
                            TipoTurnoId = 3,
                            UsuarioId = 4
                        },
                        new
                        {
                            TurnoId = 10,
                            CantHorasEnDiaDeSemana = "08:00:00",
                            CantHorasEnFinDeSemana = "08:00:00",
                            FechaInicio = new DateTime(2023, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IntervaloDeDias = 5,
                            TipoTurnoId = 3,
                            UsuarioId = 3
                        },
                        new
                        {
                            TurnoId = 11,
                            CantHorasEnDiaDeSemana = "09:00:00",
                            CantHorasEnFinDeSemana = "08:00:00",
                            FechaInicio = new DateTime(2023, 9, 16, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IntervaloDeDias = 5,
                            TipoTurnoId = 1,
                            UsuarioId = 3
                        },
                        new
                        {
                            TurnoId = 12,
                            CantHorasEnDiaDeSemana = "08:00:00",
                            CantHorasEnFinDeSemana = "08:00:00",
                            FechaInicio = new DateTime(2023, 9, 17, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IntervaloDeDias = 5,
                            TipoTurnoId = 2,
                            UsuarioId = 3
                        },
                        new
                        {
                            TurnoId = 13,
                            CantHorasEnDiaDeSemana = "09:00:00",
                            CantHorasEnFinDeSemana = "08:00:00",
                            FechaInicio = new DateTime(2023, 9, 15, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IntervaloDeDias = 5,
                            TipoTurnoId = 1,
                            UsuarioId = 2
                        },
                        new
                        {
                            TurnoId = 14,
                            CantHorasEnDiaDeSemana = "08:00:00",
                            CantHorasEnFinDeSemana = "08:00:00",
                            FechaInicio = new DateTime(2023, 9, 16, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IntervaloDeDias = 5,
                            TipoTurnoId = 2,
                            UsuarioId = 2
                        },
                        new
                        {
                            TurnoId = 15,
                            CantHorasEnDiaDeSemana = "08:00:00",
                            CantHorasEnFinDeSemana = "08:00:00",
                            FechaInicio = new DateTime(2023, 9, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IntervaloDeDias = 5,
                            TipoTurnoId = 3,
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("Schedls.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UltimoTokenValido")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Apellido = "Mendoza",
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Correo = "albert@gmail.com",
                            Nombre = "Albert",
                            UltimoTokenValido = ""
                        },
                        new
                        {
                            UsuarioId = 2,
                            Apellido = "Liriano",
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Correo = "deninson@gmail.com",
                            Nombre = "Deninson",
                            UltimoTokenValido = ""
                        },
                        new
                        {
                            UsuarioId = 3,
                            Apellido = "Mendez",
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Correo = "domingo@gmail.com",
                            Nombre = "Domingo",
                            UltimoTokenValido = ""
                        },
                        new
                        {
                            UsuarioId = 4,
                            Apellido = "Goris",
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Correo = "frank@gmail.com",
                            Nombre = "Frank",
                            UltimoTokenValido = ""
                        },
                        new
                        {
                            UsuarioId = 5,
                            Apellido = "Bonifacio",
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Correo = "danilo@gmail.com",
                            Nombre = "Danilo",
                            UltimoTokenValido = ""
                        },
                        new
                        {
                            UsuarioId = 6,
                            Apellido = "Castillo",
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Correo = "eliot@gmail.com",
                            Nombre = "Eliot",
                            UltimoTokenValido = ""
                        });
                });

            modelBuilder.Entity("Schedls.Models.SolicitudCambio", b =>
                {
                    b.HasOne("Schedls.Models.EstadoSolicitud", "EstadoSolicitud")
                        .WithMany()
                        .HasForeignKey("EstadoSolicitudId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Schedls.Models.Turno", "TurnoActual")
                        .WithMany()
                        .HasForeignKey("TurnoActualId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Schedls.Models.Turno", "TurnoSolicitado")
                        .WithMany()
                        .HasForeignKey("TurnoSolicitadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Schedls.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoSolicitud");

                    b.Navigation("TurnoActual");

                    b.Navigation("TurnoSolicitado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Schedls.Models.Turno", b =>
                {
                    b.HasOne("Schedls.Models.TipoTurno", "TipoTurno")
                        .WithMany()
                        .HasForeignKey("TipoTurnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Schedls.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoTurno");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
